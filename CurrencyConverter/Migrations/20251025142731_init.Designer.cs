// <auto-generated />
using System;
using CurrencyConverter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyConverter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251025142731_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CurrencyConverter.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capital")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("capital");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("currency_code");

                    b.Property<decimal?>("EstimatedGdp")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("estimated_gdp");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("exchange_rate");

                    b.Property<string>("FlagUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("flag_url");

                    b.Property<DateTime>("LastRefreshedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_refreshed_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<long>("Population")
                        .HasColumnType("bigint")
                        .HasColumnName("population");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("region");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Region");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("CurrencyConverter.Model.RefreshLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("error_message");

                    b.Property<DateTime>("RefreshedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("refreshed_at");

                    b.Property<bool>("Success")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("success");

                    b.Property<int>("TotalCountries")
                        .HasColumnType("int")
                        .HasColumnName("total_countries");

                    b.HasKey("Id");

                    b.ToTable("refresh_logs");
                });
#pragma warning restore 612, 618
        }
    }
}
